<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Home</title><link>https://hashimcolombowala.com/</link><description>Recent content on Home</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>hashim@hey.com (Hashim Colombowala)</managingEditor><webMaster>hashim@hey.com (Hashim Colombowala)</webMaster><copyright>Â©2024, All Rights Reserved</copyright><lastBuildDate>Sat, 12 Oct 2024 23:00:35 -0700</lastBuildDate><atom:link href="https://hashimcolombowala.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Custom Resource Definitions (CRDs) and Extending Kubernetes</title><link>https://hashimcolombowala.com/posts/2024-10-12-k8s-controller-1/</link><pubDate>Sat, 12 Oct 2024 23:00:35 -0700</pubDate><author>hashim@hey.com (Hashim Colombowala)</author><atom:modified>Sat, 12 Oct 2024 23:00:35 -0700</atom:modified><guid>https://hashimcolombowala.com/posts/2024-10-12-k8s-controller-1/</guid><description>&lt;p>Kubernetes is known for its power and flexibility in managing containerized applications, but did you know it can also be extended to orchestrate custom workflows unique to your organization&amp;rsquo;s needs? Enter Custom Resource Definitions (CRDs). CRDs allow you to define your own resource types, extending Kubernetes beyond its out-of-the-box functionality. This means that Kubernetes can manage not just Pods and Services, but also any other kind of resource that your team requires.&lt;/p></description><dc:creator>Hashim Colombowala</dc:creator><category>kubernetes</category><category>controllers-1</category></item><item><title>Another Off-by-One (Mostly) Problem and Prometheus Counter Spikes</title><link>https://hashimcolombowala.com/posts/2024-10-09-counter-spike/</link><pubDate>Wed, 09 Oct 2024 21:00:00 -0700</pubDate><author>hashim@hey.com (Hashim Colombowala)</author><atom:modified>Wed, 09 Oct 2024 21:00:00 -0700</atom:modified><guid>https://hashimcolombowala.com/posts/2024-10-09-counter-spike/</guid><description>&lt;h3 id="the-problem">The Problem&lt;/h3>
&lt;p>We have observed several Prometheus counters showing false spikes (i.e., no matching increase in logs) that could correlate with nodes experiencing kernel panics and reboots.&lt;/p></description><dc:creator>Hashim Colombowala</dc:creator><category>o11y</category><category>metrics</category></item><item><title>What is flink and why should we care about it</title><link>https://hashimcolombowala.com/posts/2024-10-08-kafka-flink/</link><pubDate>Mon, 07 Oct 2024 23:00:00 -0700</pubDate><author>hashim@hey.com (Hashim Colombowala)</author><atom:modified>Mon, 07 Oct 2024 23:00:00 -0700</atom:modified><guid>https://hashimcolombowala.com/posts/2024-10-08-kafka-flink/</guid><description>&lt;p>Recently, the observability team was tasked with a latency reporting project. The key features included:&lt;/p></description><dc:creator>Hashim Colombowala</dc:creator><category>flink</category><category>kotlin</category></item><item><title>Learning Generics by extending the prometheus python client</title><link>https://hashimcolombowala.com/posts/generics/</link><pubDate>Sat, 02 Jul 2022 14:30:00 +0000</pubDate><author>hashim@hey.com (Hashim Colombowala)</author><atom:modified>Sat, 02 Jul 2022 14:30:00 +0000</atom:modified><guid>https://hashimcolombowala.com/posts/generics/</guid><description>&lt;p>Imagine you&amp;rsquo;re writing a library to extend the &lt;a href="https://github.com/prometheus/client_python">prometheus python client&lt;/a> and you needed to add some dynamic labels specific to the environment. Ideally you would add most of your labels at the collector end and avoid writing extensions.&lt;/p></description><dc:creator>Hashim Colombowala</dc:creator><category>python</category><category>o11y</category></item><item><title>Designing a metrics system notes</title><link>https://hashimcolombowala.com/posts/metrics/</link><pubDate>Fri, 01 Jul 2022 01:33:40 +0000</pubDate><author>hashim@hey.com (Hashim Colombowala)</author><atom:modified>Fri, 01 Jul 2022 01:33:40 +0000</atom:modified><guid>https://hashimcolombowala.com/posts/metrics/</guid><description>&lt;p>To effectively monitor and understand the performance of your applications and infrastructure, having a well-designed metrics system is crucial. Here are the key requirements and components for building a reliable metrics system.&lt;/p></description><dc:creator>Hashim Colombowala</dc:creator><category>python</category><category>o11y</category></item><item><title>Comparing Session-Based and Token-Based Authentication</title><link>https://hashimcolombowala.com/posts/auth/</link><pubDate>Fri, 18 Jun 2021 12:33:40 +0000</pubDate><author>hashim@hey.com (Hashim Colombowala)</author><atom:modified>Fri, 18 Jun 2021 12:33:40 +0000</atom:modified><guid>https://hashimcolombowala.com/posts/auth/</guid><description>&lt;p>This post will briefly compare and contrast the two most common authentication techniques: session-based and token-based authentication. Understanding the differences between these methods is crucial for selecting the right approach for your application&amp;rsquo;s needs.&lt;/p></description><dc:creator>Hashim Colombowala</dc:creator><category>python</category></item><item><title>Signalling docker containers</title><link>https://hashimcolombowala.com/posts/signal/</link><pubDate>Wed, 27 Jan 2021 01:33:40 +0000</pubDate><author>hashim@hey.com (Hashim Colombowala)</author><atom:modified>Wed, 27 Jan 2021 01:33:40 +0000</atom:modified><guid>https://hashimcolombowala.com/posts/signal/</guid><description>&lt;p>When deploying a containerized application to a container management system like AWS Fargate, you tend to run your application from a shell script. Suppose your script looks like this&lt;/p></description><dc:creator>Hashim Colombowala</dc:creator><category>python</category><category>docker</category></item><item><title>Abstract classes using Metaclasses</title><link>https://hashimcolombowala.com/posts/2020-12-28-python-metaclasses/</link><pubDate>Mon, 28 Dec 2020 01:33:40 +0000</pubDate><author>hashim@hey.com (Hashim Colombowala)</author><atom:modified>Mon, 28 Dec 2020 01:33:40 +0000</atom:modified><guid>https://hashimcolombowala.com/posts/2020-12-28-python-metaclasses/</guid><description>&lt;p>In python3 all classes are new style classes, thus it is reasonable to refer to an objects type and its class interchangably&lt;/p></description><dc:creator>Hashim Colombowala</dc:creator><category>python</category></item><item><title>The Go Spec(compiling)</title><link>https://hashimcolombowala.com/posts/2020-06-20-the-go-spec/</link><pubDate>Sat, 20 Jun 2020 16:00:00 -0700</pubDate><author>hashim@hey.com (Hashim Colombowala)</author><atom:modified>Sat, 20 Jun 2020 16:00:00 -0700</atom:modified><guid>https://hashimcolombowala.com/posts/2020-06-20-the-go-spec/</guid><description>&lt;p>The Go compiler can compile the Go source go with different go specs. Fo example, if you have installed go 1.14, you can compile your source with &lt;code>Go spec 1.13&lt;/code>.&lt;/p></description><dc:creator>Hashim Colombowala</dc:creator><category>go</category></item><item><title>The Zen of Python</title><link>https://hashimcolombowala.com/posts/2020-04-17-zen-of-python/</link><pubDate>Tue, 07 Apr 2020 18:54:00 -0700</pubDate><author>hashim@hey.com (Hashim Colombowala)</author><atom:modified>Tue, 07 Apr 2020 18:54:00 -0700</atom:modified><guid>https://hashimcolombowala.com/posts/2020-04-17-zen-of-python/</guid><description>&lt;p>Every once in a while, it&amp;rsquo;s good to revisit the principles that guide Python&amp;rsquo;s design and philosophy. One of the most iconic expressions of these principles is &amp;ldquo;The Zen of Python&amp;rdquo; by Tim Peters. If you haven&amp;rsquo;t read it in a while, it might be worth taking a moment to appreciate the simplicity and wisdom it contains.&lt;/p></description><dc:creator>Hashim Colombowala</dc:creator><category>python</category></item><item><title>Python decorator common use cases</title><link>https://hashimcolombowala.com/posts/2020-04-04-python-decorator-use-cases/</link><pubDate>Sat, 04 Apr 2020 15:54:35 -0700</pubDate><author>hashim@hey.com (Hashim Colombowala)</author><atom:modified>Sat, 04 Apr 2020 15:54:35 -0700</atom:modified><guid>https://hashimcolombowala.com/posts/2020-04-04-python-decorator-use-cases/</guid><description>&lt;p>Python decorators are a powerful feature that allow you to extend the functionality of existing functions or methods in a reusable and elegant way. They are especially useful for tasks that you may need to apply repeatedly to different functions. Below are some common use cases for Python decorators.&lt;/p></description><dc:creator>Hashim Colombowala</dc:creator><category>python</category></item></channel></rss>