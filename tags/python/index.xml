<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>python on Home</title><link>https://hashimcolombowala.com/tags/python/</link><description>Recent content in python on Home</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>hashim@hey.com (Hashim Colombowala)</managingEditor><webMaster>hashim@hey.com (Hashim Colombowala)</webMaster><copyright>Â©2021, All Rights Reserved</copyright><lastBuildDate>Wed, 27 Jan 2021 01:33:40 +0000</lastBuildDate><atom:link href="https://hashimcolombowala.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Signalling docker containers</title><link>https://hashimcolombowala.com/posts/signal/</link><pubDate>Wed, 27 Jan 2021 01:33:40 +0000</pubDate><author>hashim@hey.com (Hashim Colombowala)</author><atom:modified>Wed, 27 Jan 2021 01:33:40 +0000</atom:modified><guid>https://hashimcolombowala.com/posts/signal/</guid><description>When deploying a containerized application to a container management system like AWS Fargate, you tend to run your application from a shell script. Suppose your script looks like this</description><dc:creator>Hashim Colombowala</dc:creator><category>python</category><category>docker</category></item><item><title>Abstract classes using Metaclasses</title><link>https://hashimcolombowala.com/posts/2020-12-28-python-metaclasses/</link><pubDate>Mon, 28 Dec 2020 01:33:40 +0000</pubDate><author>hashim@hey.com (Hashim Colombowala)</author><atom:modified>Mon, 28 Dec 2020 01:33:40 +0000</atom:modified><guid>https://hashimcolombowala.com/posts/2020-12-28-python-metaclasses/</guid><description>In python3 all classes are new style classes, thus it is reasonable to refer to an objects type and its class interchangably
Type and Class 1 2 3 4 5 6 7 class Foo: pass &amp;gt;&amp;gt;&amp;gt; type(Foo) &amp;lt;class &amp;#39;type&amp;#39;&amp;gt; Type is a metaclass of which classes are instances</description><dc:creator>Hashim Colombowala</dc:creator><category>python</category></item></channel></rss>